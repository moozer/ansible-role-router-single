# setup of router with NAT, DHCP and DNS.

- hosts: routers
  # user vagrant and sudo is the vagrant way 
  user: vagrant
  sudo: yes

  roles:
  - router-single

  vars_files:
  - common_vars.yml

  vars:
  - NAT_inside: 
    - vio2
    - vio3
  - NAT_outside: vio1
  - dhcpd_if: "{{ NAT_inside }}"
  
  - LAN_params:
      vio1: "{{ LAN_upstream }}"
      vio2: "{{ LAN_A }}"
      vio3: "{{ LAN_B }}"

  - ip_adresses:
      vio1: "10.10.0.5"
      vio2: "{{ LAN_A.gateway }}"
      vio3: "{{ LAN_B.gateway }}"
   
  #~ - LAN_params:
      #~ vio1:
        #~ ip4: "{{ LAN_A.gateway }}"
    
          #~ ip4: "{{ LAN_A.gateway }}"
    #~ - vio3: 
        #~ LAN_B:
          #~ ip4: "{{ LAN_B.gateway }}"
#~ 
  #~ - LAN_params
   #~ vio1.ip4: 10.10.0.5
      #~ vio2: 
        #~ LAN_A:
          #~ ip4: "{{ LAN_A.gateway }}"
      #~ vio3: 
        #~ LAN_B:
          #~ ip4: "{{ LAN_B.gateway }}"

  #~ tasks:
  #~ - name: LAN upstream (from routers)
    #~ debug: var=LAN_upstream 
#~ 
  #~ - name: LAN parameters (from routers)
    #~ debug: var=LAN_params
#~ 
  #~ - name: dhcpd
    #~ debug: var=dhcpd_if
    
# config is handled by vagrant, but I us a common role that supports something like this.
#- hosts: serverA
#  # user vagrant and sudo is the vagrant way 
#  user: vagrant
#  sudo: yes
#
#  vars:
#  - lan_params:
#    # not setting ip4, defaults to using dhcp
#    eth1: LAN_A
#
